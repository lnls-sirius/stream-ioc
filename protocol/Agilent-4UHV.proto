# Agilent-4UHV.proto

# Communication protocol for Agilent 4UHV Ion Pump Controller. This is based on the work of Pete
# Owens from the Science and Technology Facilities Council (STFC).

# The timeout involved in reading operations is 20 ms

ReadTimeout = 20;

# Channel current reading

getCurrent {
    MaxInput = 19;
    out STX, $1, "8\$21", 0x30, ETX, "%01<xor>";
    in STX, "\?", "8\$21", 0x30, "%10g", ETX, "%01<xor>";
}

# Device number readback

getDeviceNumber {
    MaxInput = 15;
    out STX, $1, "6\$20", 0x30, ETX, "%01<xor>";
    in STX, "\?", "6\$20", 0x30, "%6d", ETX, "%01<xor>";
}

# Error code reading

getErrorCode {
    out STX, $1, "505", 0x31, "00000\$2", ETX, "%01<xor>";
    in STX, "\?", ACK, ETX, "%01<xor>";
    out STX, $1, "206", 0x30, ETX, "%01<xor>"; 
    in STX, "\?", "206", 0x30, "%6d", ETX, "%01<xor>";
}

# Fan temperature

getFanTemperature {
    MaxInput = 15;
    out STX, $1, "800", 0x30, ETX, "%01<xor>";
    in STX, "\?", "800", 0x30, "%6d", ETX, "%01<xor>";
}

# HV temperature - channel 1

getHVTemperature1 {
    MaxInput = 15;
    out STX, $1, "801", 0x30, ETX, "%01<xor>";
    in STX, "\?", "801", 0x30, "%6d", ETX, "%01<xor>";
}

# HV temperature - channel 2

getHVTemperature2 {
    MaxInput = 15;
    out STX, $1, "802", 0x30, ETX, "%01<xor>";
    in STX, "\?", "802", 0x30, "%6d", ETX, "%01<xor>";
}

# HV temperature - channel 3

getHVTemperature3 {
    MaxInput = 15;
    out STX, $1, "808", 0x30, ETX, "%01<xor>";
    in STX, "\?", "808", 0x30, "%6d", ETX, "%01<xor>";
}

# HV temperature - channel 4

getHVTemperature4 {
    MaxInput = 15;
    out STX, $1, "809", 0x30, ETX, "%01<xor>";
    in STX, "\?", "809", 0x30, "%6d", ETX, "%01<xor>";
}

# Operating mode (autostart on/off) readback

getMode {
    MaxInput = 19;
    out STX, $1, "601", 0x30, ETX, "%01<xor>";
    in STX, "\?", "601", 0x30, "%10d", ETX, "%01<xor>";
}

# Device model

getModel {
    MaxInput = 19;
    out STX, $1, "319", 0x30, ETX, "%01<xor>";
    in STX, "\?", "319", 0x30, "%10c", ETX, "%01<xor>";
}

# Channel pressure reading

getPressure {
    MaxInput = 19;
    out STX, $1, "8\$22", 0x30, ETX, "%01<xor>";
    in STX, "\?", "8\$22", 0x30, "%10g", ETX, "%01<xor>";
}

# "Protect" reading

getProtect {
    MaxInput = 19;
    out STX, $1, "602", 0x30, ETX, "%01<xor>";
    in STX, "\?", "602", 0x30, "%10b", ETX, "%01<xor>";
}

# Device serial number

getSerialNumber {
    MaxInput = 19;
    out STX, $1, "323", 0x30, ETX, "%01<xor>";
    in STX, "\?", "323", 0x30, "%10c", ETX, "%01<xor>";
}

# "Step" reading

getStep {
    MaxInput = 19;
    out STX, $1, "603", 0x30, ETX, "%01<xor>";
    in STX, "\?", "603", 0x30, "%10b", ETX, "%01<xor>";
}

# Unit readback

getUnit {
    MaxInput = 15;
    out STX, $1, "600", 0x30, ETX, "%01<xor>";
    in STX, "\?", "600", 0x30, "%6d", ETX, "%01<xor>";
}

# Channel voltage reading

getVoltage {
    MaxInput = 15;
    out STX, $1, "8\$20", 0x30, ETX, "%01<xor>";
    in STX, "\?", "8\$20", 0x30, "%6d", ETX, "%01<xor>";
}

# Device number setpoint

setDeviceNumber {
    MaxInput = 6;
    out STX, $1, "6\$20", 0x31, "%06d", ETX, "%01<xor>";
    in STX, "\?", ACK, ETX, "%01<xor>";
}

# Operating mode (autostart on/off) setpoint

setMode {
    MaxInput = 6;
    out STX, $1, "601", 0x31, "%010d", ETX, "%01<xor>";
    in STX, "\?", ACK, ETX, "%01<xor>";
}

# Unit setpoint

setUnit {
    MaxInput = 6;
    out STX, $1, "600", 0x31, "%06d", ETX, "%01<xor>";
    in STX, "\?", ACK, ETX, "%01<xor>";
}
