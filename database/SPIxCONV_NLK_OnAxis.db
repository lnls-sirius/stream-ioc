# SPIxCONV.db

# Record definition for one temperature channel. Developed for MBTemp version 2.1 and newer.

# This file contains four records definition:
#   - analog out
#   - analog in
#   - digital out
#   - digital in
# SPIxCONV.db

# Record definition for one temperature channel. Developed for MBTemp version 2.1 and newer.

# This file contains four records definition:
#   - analog out
#   - analog in
#   - digital out
#   - digital in
#==============================================================================
#   ANALOG OUT
#==============================================================================
record(ao, "$(PREFIX):Voltage-SP") {
    field(DESC, "analog out parameter")
    field(DTYP, "stream")
    field(EGU, "Volt")
    field(AOFF, "-10.0")
    field(ASLO, "0.00007629423635191479459684")
    field(EOFF, "0.0")
    field(ESLO, "$(VOLTAGE_FACTOR)")
    field(OUT, "@SPIxCONV.proto set_analog_output($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(LINR, "LINEAR")
    field(PREC, "1")                            # Display Precision
    field(SCAN, "Passive")
#    field(HOPR, "10.0")
#    field(LOPR, "-10.0")
}
#------------------------------------------------------------------------------
record(ai, "$(PREFIX):Voltage-RB") {
    field(DESC, "read analog out setpoint") # Description
    field(DTYP, "stream")                       # Device Type
    field(EGU,  "Volt")                         # Engineering Units
    # DAC and ADC calibration (applied to raw value):
    # calibration is already done when requesting a read/write command!
    #   --> functions dac.write() and adc.read()
    # adjust conversion from binary code to voltage:
    field(ASLO, "0.00007629423635191479459684") # Calibration Slope
    field(AOFF, "-10.0")                        # Calibration Offset
    # adjust conversion to voltage power supply range:
    field(ESLO, "$(VOLTAGE_FACTOR)")                        # Conversion Slope
    field(EOFF, "0.0")                          # Conversion Offset
    field(INP,  "@SPIxCONV.proto read_analog_output($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(LINR, "LINEAR")                       # Type of Conversion
    field(PINI, "YES")                          # Process at Initialization
    field(PREC, "1")                            # Display Precision
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#==============================================================================
#   ANALOG IN
#==============================================================================
# measure according to the high voltage supply range
record(ai, "$(PREFIX):Voltage-Mon") {
    field(DESC, "analog in parameter")          # Description
    field(DTYP, "stream")                       # Device Type
    field(EGU,  "Volt")                         # Engineering Units
    # DAC and ADC calibration (applied to raw value):
    # calibration is already done when requesting a read/write command!
    #   --> functions dac.write() and adc.read()
    # adjust conversion from binary code to voltage:
    field(ASLO, "0.00007629423635191479459684") # Calibration Slope
    field(AOFF, "-10.0")                        # Calibration Offset
    # adjust conversion to voltage power supply range:
    field(ESLO, "$(VOLTAGE_FACTOR)")                        # Conversion Slope
    field(EOFF, "0.0")                          # Conversion Offset
    field(INP,  "@SPIxCONV.proto read_analog_input($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(LINR, "LINEAR")                       # Type of Conversion
    field(PINI, "YES")                          # Process at Initialization
    field(PREC, "1")                            # Display Precision
    field(SCAN, "$(SCAN_RATE)")                    # Scanning Rate
    field(SMOO, "0.5")                          # Smoothing factor from 0 to 1 (0: no smoothing; 1: value never change)
}
#==============================================================================
#   DIGITAL PORT A
#==============================================================================
#***************************************
#   LOCAL/REMOTE (1 INPUT)
#***************************************
# interlock signal
#-------------------
record(bi, "$(PREFIX):CmdMode-Sts") {
    field(DESC, "Operation status: local/remote")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(0) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#***************************************
#   INTERLOCKS (7 INPUTS)
#***************************************
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk1-Mon") {
    field(DESC, "Interlock signal 1")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(1) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):IntlkLabel1-Cte") {
    field(DESC, "Interlock label 1")
    field(VAL, "Switch Module")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk2-Mon") {
    field(DESC, "Interlock signal 2")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(2) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):IntlkLabel2-Cte") {
    field(DESC, "Interlock label 2")
    field(VAL, "AC CPFL OFF")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk3-Mon") {
    field(DESC, "Interlock signal 3")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(3) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):IntlkLabel3-Cte") {
    field(DESC, "Interlock label 3")
    field(VAL, "Temperature")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk4-Mon") {
    field(DESC, "Interlock signal 4")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(4) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):IntlkLabel4-Cte") {
    field(DESC, "Interlock label 4")
    field(VAL, "Personnel protection")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk5-Mon") {
    field(DESC, "Interlock signal 5")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(5) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):IntlkLabel5-Cte") {
    field(DESC, "Interlock label 5")
    field(VAL, "HVPS Overcurrent")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk6-Mon") {
    field(DESC, "Interlock signal 6")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(6) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):IntlkLabel6-Cte") {
    field(DESC, "Interlock label 6")
    field(VAL, "HVPS Overvoltage")
}
#------------------------------------------------------------------------------
# interlock signal
#-------------------
record(bi, "$(PREFIX):Intlk7-Mon") {
    field(DESC, "Interlock signal 7")
    field(INP, "@SPIxCONV.proto read_portA_digital_input_bit(7) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# interlock label
#-------------------
record(stringout, "$(PREFIX):IntlkLabel7-Cte") {
    field(DESC, "Interlock label 7")
    field(VAL, "External")
}
#==============================================================================
#   DIGITAL PORT B
#==============================================================================
#***************************************
#   SET OPERATION MODE (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):OpMode-Sel") {
    field(DESC, "Set operation mode")
    field(OUT, "@SPIxCONV.proto set_portB_digital_output_bit(0) socket_spixconv")
    field(DTYP, "stream")                      # Device Type
    field(SCAN, "Passive")                     # Scanning Rate
    field(VAL, "0")
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label0") {
    field(DESC, "PV label 0")
    field(VAL, "Set operation mode")
}
#***************************************
#   TURN ON/OFF POWER SUPPLY (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):PwrState-Sel") {
    field(DESC, "Turn ON/OFF HVPS")
    field(OUT, "@SPIxCONV.proto set_portB_digital_output_bit(1) socket_spixconv")
    field(DTYP, "stream")                      # Device Type
    field(SCAN, "Passive")                     # Scanning Rate
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label1") {
    field(DESC, "PV label 1")
    field(VAL, "Turn ON/OFF HVPS")
}
#***************************************
#   TRIGGER (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):Pulse-Sel") {
    field(DESC, "Turn ON/OFF trigger pulse")
    field(OUT, "@SPIxCONV.proto set_portB_digital_output_bit(2) socket_spixconv")
    field(DTYP, "stream")                      # Device Type
    field(SCAN, "Passive")                     # Scanning Rate
    field(ZSV, "NO_ALARM")
    field(OSV, "NO_ALARM")
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label2") {
    field(DESC, "PV label 2")
    field(VAL, "Turn ON/OFF trigger pulse")
}
#***************************************
#   RESET (1 OUTPUT)
#***************************************
record(bo, "$(PREFIX):Reset-Cmd") {
    field(DESC, "Reset the controller unit")
    field(OUT, "@SPIxCONV.proto reset($(SPIxCONV_ADDRESS)) socket_spixconv")
    field(DTYP, "stream")                      # Device Type
    field(SCAN, "Passive")                     # Scanning Rate
    field(HIGH, "0.2")                         # Seconds to Hold High
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label3") {
    field(DESC, "PV label 3")
    field(VAL, "Reset the controller unit")
}
#***************************************
#   AVAILABLE PVs (4 I/O)
#***************************************
record(bi, "$(PREFIX):PortB_in4") {
    field(DESC, "Interlock signal 4")
    field(INP, "@SPIxCONV.proto read_portB_digital_input_bit(4) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label4") {
    field(DESC, "PV label 4")
    field(VAL, "---Available PV---")
}
#------------------------------------------------------------------------------
record(bi, "$(PREFIX):OpMode-Sts") {
    field(DESC, "Interlock signal 5")
    field(INP, "@SPIxCONV.proto read_portB_digital_input_bit(5) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label5") {
    field(DESC, "PV label 5")
    field(VAL, "Read operation mode")
}
#------------------------------------------------------------------------------
record(bi, "$(PREFIX):Intlk8-Mon") {
    field(DESC, "Interlock signal 6")
    field(INP, "@SPIxCONV.proto read_portB_digital_input_bit(6) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label6") {
    field(DESC, "PV label 6")
    field(VAL, "Switch Overcurrent")
}
#------------------------------------------------------------------------------
record(bi, "$(PREFIX):PwrState-Mon") {
    field(DESC, "Interlock signal 7")
    field(INP, "@SPIxCONV.proto read_portB_digital_input_bit(7) socket_spixconv")
    field(DTYP, "stream")                       # Device Type
    field(PINI, "YES")                          # Process at Initialization
    field(SCAN, "$(SCAN_RATE)")                 # Scanning Rate
}
#-------------------
# PV label
#-------------------
record(stringout, "$(PREFIX):PortB_label7") {
    field(DESC, "PV label 7")
    field(VAL, "HVPS Status")
}
#==============================================================================
#   DIGITAL PORT C
#==============================================================================

# --- records not created --- #

# bi:           interlock signal    $(PREFIX):PortC_in1
# bo:           output signal       $(PREFIX):PortC_out6
# stringout:    label constant      $(PREFIX):PortC_label5
# bo:           pin direction       $(PREFIX):PortC_SW3

#==============================================================================
#   DIGITAL PORT D
#==============================================================================

# --- records not created --- #

# bi:           interlock signal    $(PREFIX):PortD_in1
# bo:           output signal       $(PREFIX):PortD_out6
# stringout:    label constant      $(PREFIX):PortD_label5
# bo:           pin direction       $(PREFIX):PortD_SW3

#==============================================================================
#   ON/OFF STATE
#==============================================================================
record(bo, "$(PREFIX):on_off") {
    field(DESC, "On/Off IOC status")
    field(SCAN, "Passive")
    field(VAL, "1")
}
#==============================================================================



#***************************************
#   INTERLOCKS (7 INPUTS)
#***************************************
#record(waveform, "$(PREFIX):IntlkLabels-Cte") {
#record(stringout, "$(PREFIX):IntlkLabels-Cte") {
#    field(DESC, "Interlock labels")
#    field(DTYP, "stream")
#    field(FTVL, "STRING")
#    #field(FTVL, "UCHAR")
#    field(INP, "@SPIxCONV.proto read_interlock_labels socket_spixconv")
#    field(NELM, "7")
#    #field(NELM, "256")
#    field(PINI, "YES")
#}



#------------------------------------------------------------------------------



#S	TB-04:PU-InjSept
#S	TS-01:PU-EjeSeptF
#S	TS-01:PU-EjeSeptG
#S	TS-04:PU-InjSeptG-1
#S	TS-04:PU-InjSeptG-2
#S	TS-04:PU-InjSeptF
#K	BO-01D:PU-InjKckr
#K	BO-48D:PU-EjeKckr
#K	SI-01SA:PU-InjNLKckr
#K	SI-01SA:PU-InjDpKckr
#P	SI-19C4:PU-PingV
